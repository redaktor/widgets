.root {
	composes: root from './cb.m.css';
}
.inner {
	composes: inner from './cb.m.css';
	composes: circle from './_ui.m.css';
}
.input { composes: input from './cb.m.css'; }
.disabled { composes: disabled from './cb.m.css'; }
.enabled { composes: enabled from './cb.m.css'; }
.invalid { composes: invalid from './cb.m.css'; }
.valid { composes: valid from './cb.m.css'; }
.normal { composes: normal from './cb.m.css'; }
.radio { composes: radio from './cb.m.css'; }
.parentSchema { }
.outlined { composes: outlined from './cb.m.css'; }
.filled { composes: filled from './cb.m.css'; }
.shaped { composes: shaped from './cb.m.css'; }

.root.noLabel {
	padding: 0;
	margin-right: var(--ui-lr);
	width: var(--ui-inner-h);
}
.root .inner, .root .inner::before {
	border-radius: 50% !important;
}
.root .inner {
	width: var(--ui-inner-h);
	height: var(--ui-inner-h);
	padding: 0;
}
.root:hover .inner {
	border-color: var(--ui-hover-border);
}
.enabled .inner {
	background-color: var(--root-bg);
}
/*
.dark .inner {
	border: var(--ui-border-width-emphasized) solid var(--m-500);
}*/
.root .input:checked:active ~ .inner::before {
	transition: opacity .3s;
	animation: ripple var(--ui-dpd-16) var(--ui-easing) 1 .08s;
}
.root.normal .inner::after {
	border-radius: 50%;
	transition: transform var(--ui-dpd-4) var(--ui-easing);
	transform: translate3d(0, 0, 0);
	transform-origin: center;
	transform: scale(0, 0);
}
.root.normal .input:checked ~ .inner::after {
	transform: scale(0.618);
}
.normal .input:checked ~ .inner::after {
	background-color: var(--ui-accent);
}
.normal.filled .input:checked ~ .inner::after {
	background-color: var(--ui-fill-text);
}
/* required style, only applies to inputs with a label TODO old */
.required span::before {
	content: '*';
}
/* valid style */
.valid .inner {
	border-color: var(--ui-success);
}
.valid .inner::before {
	background-color: var(--ui-success);
}
/* invalid style */
.invalid .inner {
	border-color: var(--ui-error);
}
.invalid .prefix::before {
	background-color: var(--ui-error);
}
